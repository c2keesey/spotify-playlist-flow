{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Playlist.tsx\";\nimport { ListGroup, Container, Row, Col, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_IMG = \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\nconst Playlist = _ref => {\n  let {\n    playlist,\n    tracks\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"pannel-height\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-column py-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"search\",\n        placeholder: \"Search\"\n        // value={searchedPlaylist}\n        // onChange={(e) => setSearchedPlaylist(e.target.value)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"h-100 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: tracks.map(item => {\n            var _item$track, _item$track2, _item$track3, _item$track4;\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: (_item$track2 = item.track) === null || _item$track2 === void 0 ? void 0 : _item$track2.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: (_item$track3 = item.track) === null || _item$track3 === void 0 ? void 0 : _item$track3.artists.map(artist => {\n                    return artist.name;\n                  }).join(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: (_item$track4 = item.track) === null || _item$track4 === void 0 ? void 0 : _item$track4.album.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, (_item$track = item.track) === null || _item$track === void 0 ? void 0 : _item$track.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["ListGroup","Container","Row","Col","Form","jsxDEV","_jsxDEV","DEFAULT_IMG","Playlist","_ref","playlist","tracks","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","map","item","_item$track","_item$track2","_item$track3","_item$track4","Item","track","artists","artist","join","album","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Playlist.tsx"],"sourcesContent":["import { ListGroup, Container, Row, Col, Image, Form } from \"react-bootstrap\";\n\nconst DEFAULT_IMG: string =\n  \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\n\ninterface Props {\n  playlist: SpotifyApi.SinglePlaylistResponse;\n  tracks: SpotifyApi.PlaylistTrackObject[];\n}\n\nconst Playlist: React.FC<Props> = ({ playlist, tracks }) => {\n  return (\n    <Container className=\"pannel-height\">\n      <Row>\n        <Col>\n          <h2>{playlist.name}</h2>\n        </Col>\n        \n      </Row>\n      <Container className=\"d-flex flex-column py-3\">\n        <Form.Control\n          type=\"search\"\n          placeholder=\"Search\"\n          // value={searchedPlaylist}\n          // onChange={(e) => setSearchedPlaylist(e.target.value)}\n        />\n      </Container>\n      <Container className=\"h-100 overflow-auto\">\n        <Row>\n          <ListGroup>\n            {tracks.map((item) => (\n              <ListGroup.Item key={item.track?.name}>\n                <div>\n                  <strong>{item.track?.name}</strong>\n                  <p>\n                    {item.track?.artists\n                      .map((artist) => {\n                        return artist.name;\n                      })\n                      .join(\", \")}\n                  </p>\n                  <small>{item.track?.album.name}</small>\n                </div>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Playlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}