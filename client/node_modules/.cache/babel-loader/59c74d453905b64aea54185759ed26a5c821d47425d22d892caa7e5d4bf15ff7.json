{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable-next-line */\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport YourLibrary from \"./YourLibrary\";\nimport useAuth from \"./useAuth\";\nimport Playlist from \"./Playlist\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"5e3726a0ec3f4360bf3d47eb34207aa8\"\n});\nconst Dashboard = _ref => {\n  _s();\n  let {\n    authCode\n  } = _ref;\n  const [currentPlaylistID, setCurrentPlaylistID] = useState(null);\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\n  const [searchedPlaylist, setSearchedPlaylist] = useState(\"\");\n  const [userPlaylists, setUserPlaylists] = useState([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState([]);\n  const [myID, setMyID] = useState(\"\");\n  const accessToken = useAuth({\n    authCode\n  });\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.getMe().then(res => {\n      setMyID(res.body.id);\n      return res.body.id;\n    }).then(res => {\n      const prom = spotifyApi.getUserPlaylists(res);\n      return {\n        up: prom,\n        id: res\n      };\n    }).then(res => {\n      let off = 1;\n      const playlistPromises = [res.up];\n      while (res.up.body.total > 0 && off < 10) {\n        const promise = spotifyApi.getUserPlaylists(myID, {\n          limit: 50,\n          offset: off\n        });\n        playlistPromises.push(promise);\n        off += 1;\n      }\n      return Promise.all(playlistPromises).then(results => {\n        const playlists = [];\n        results.forEach(result => {\n          result.body.items.forEach(item => {\n            playlists.push(item);\n          });\n        });\n        return playlists;\n      });\n    }).then(playlists => {\n      setUserPlaylists(playlists);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [accessToken]);\n\n  // useEffect(() => {\n  //   // if (!accessToken) return;\n  //   // if (searchedPlaylist === \"\") {\n  //   // }\n  //   spotifyApi.searchTracks(searchedPlaylist).then((res) => {\n  //     console.log(res.body);\n  //   });\n  // }, [searchedPlaylist, accessToken]);\n\n  useEffect(() => {\n    if (currentPlaylistID != null) {\n      spotifyApi.getPlaylist(currentPlaylistID).then(res => {\n        setCurrentPlaylist(res.body);\n      });\n      spotifyApi.getPlaylistTracks(currentPlaylistID).then(res => {\n        setCurrentPlaylistTracks(res.body.items);\n      });\n    }\n  }, [currentPlaylistID]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"bg-darkdarkslate text-white d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex-grow-1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"p-3 mb-2 bg-dark-subtle text-center\",\n        children: \"Playlist Flow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      fluid: true,\n      className: \"text-center flex-grow-1 \",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(YourLibrary, {\n          currentPlaylistID: currentPlaylistID,\n          setcurrentPlaylistID: setCurrentPlaylistID,\n          searchedPlaylist: searchedPlaylist,\n          setSearchedPlaylist: setSearchedPlaylist,\n          userPlaylists: userPlaylists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-6\",\n        children: currentPlaylist != null && /*#__PURE__*/_jsxDEV(Playlist, {\n          playlist: currentPlaylist,\n          tracks: currentPlaylistTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"dJaake3LCmJqyXvMy84V4+UhMZM=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["SpotifyWebApi","useState","useEffect","Container","Row","Col","YourLibrary","useAuth","Playlist","jsxDEV","_jsxDEV","spotifyApi","clientId","Dashboard","_ref","_s","authCode","currentPlaylistID","setCurrentPlaylistID","currentPlaylist","setCurrentPlaylist","searchedPlaylist","setSearchedPlaylist","userPlaylists","setUserPlaylists","currentPlaylistTracks","setCurrentPlaylistTracks","myID","setMyID","accessToken","setAccessToken","getMe","then","res","body","id","prom","getUserPlaylists","up","off","playlistPromises","total","promise","limit","offset","push","Promise","all","results","playlists","forEach","result","items","item","catch","err","console","log","getPlaylist","getPlaylistTracks","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setcurrentPlaylistID","playlist","tracks","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Dashboard.tsx"],"sourcesContent":["/* eslint-disable-next-line */\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { FC, useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport YourLibrary from \"./YourLibrary\";\nimport useAuth from \"./useAuth\";\nimport Playlist from \"./Playlist\";\nimport \"./App.css\";\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"5e3726a0ec3f4360bf3d47eb34207aa8\",\n});\n\ninterface Props {\n  authCode: string;\n}\n\nconst Dashboard: FC<Props> = ({ authCode }) => {\n  const [currentPlaylistID, setCurrentPlaylistID] = useState<string | null>(\n    null\n  );\n  const [currentPlaylist, setCurrentPlaylist] =\n    useState<SpotifyApi.SinglePlaylistResponse | null>(null);\n  const [searchedPlaylist, setSearchedPlaylist] = useState<string>(\"\");\n  const [userPlaylists, setUserPlaylists] = useState<\n    SpotifyApi.PlaylistObjectSimplified[]\n  >([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState<\n    SpotifyApi.PlaylistTrackObject[]\n  >([]);\n  const [myID, setMyID] = useState<string>(\"\");\n\n  const accessToken: string | null = useAuth({ authCode });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi\n      .getMe()\n      .then((res) => {\n        setMyID(res.body.id);\n        return res.body.id;\n      })\n      .then((res) => {\n        const prom = spotifyApi.getUserPlaylists(res);\n        return { up: prom, id: res };\n      })\n      .then((res) => {\n        let off: number = 1;\n        const playlistPromises = [res.up];\n        while (res.up.body.total > 0 && off < 10) {\n          const promise = spotifyApi.getUserPlaylists(myID, {\n            limit: 50,\n            offset: off,\n          });\n          playlistPromises.push(promise);\n          off += 1;\n        }\n        return Promise.all(playlistPromises).then((results) => {\n          const playlists: SpotifyApi.PlaylistObjectSimplified[] = [];\n          results.forEach((result) => {\n            result.body.items.forEach((item) => {\n              playlists.push(item);\n            });\n          });\n          return playlists;\n        });\n      })\n      .then((playlists) => {\n        setUserPlaylists(playlists);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [accessToken]);\n\n  // useEffect(() => {\n  //   // if (!accessToken) return;\n  //   // if (searchedPlaylist === \"\") {\n  //   // }\n  //   spotifyApi.searchTracks(searchedPlaylist).then((res) => {\n  //     console.log(res.body);\n  //   });\n  // }, [searchedPlaylist, accessToken]);\n\n  useEffect(() => {\n    if (currentPlaylistID != null) {\n      spotifyApi.getPlaylist(currentPlaylistID).then((res) => {\n        setCurrentPlaylist(res.body);\n      });\n      spotifyApi.getPlaylistTracks(currentPlaylistID).then((res) => {\n        setCurrentPlaylistTracks(res.body.items);\n      });\n    }\n  }, [currentPlaylistID]);\n\n  return (\n    <Container fluid className=\"bg-darkdarkslate text-white d-flex flex-column\">\n      <Row className=\"flex-grow-1\">\n        <h1 className=\"p-3 mb-2 bg-dark-subtle text-center\">Playlist Flow</h1>\n      </Row>\n      <Row fluid className=\"text-center flex-grow-1 \">\n        <Col className=\"col-3\">\n          <YourLibrary\n            currentPlaylistID={currentPlaylistID}\n            setcurrentPlaylistID={setCurrentPlaylistID}\n            searchedPlaylist={searchedPlaylist}\n            setSearchedPlaylist={setSearchedPlaylist}\n            userPlaylists={userPlaylists}\n          />\n        </Col>\n        <Col className=\"col-6\">\n          {currentPlaylist != null && (\n            <Playlist\n              playlist={currentPlaylist}\n              tracks={currentPlaylistTracks}\n            />\n          )}\n        </Col>\n        <Col className=\"col-3\">\n          <h2>Flow</h2>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,aAAa,MAAM,sBAAsB;AAChD,SAAaC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,UAAU,GAAG,IAAIX,aAAa,CAAC;EACnCY,QAAQ,EAAE;AACZ,CAAC,CAAC;AAMF,MAAMC,SAAoB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACxC,MAAM,CAACG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CACxD,IAAI,CACL;EACD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GACzCnB,QAAQ,CAA2C,IAAI,CAAC;EAC1D,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAS,EAAE,CAAC;EACpE,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAEhD,EAAE,CAAC;EACL,MAAM,CAACwB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGzB,QAAQ,CAEhE,EAAE,CAAC;EACL,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAS,EAAE,CAAC;EAE5C,MAAM4B,WAA0B,GAAGtB,OAAO,CAAC;IAAES;EAAS,CAAC,CAAC;EAExDd,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2B,WAAW,EAAE;IAClBlB,UAAU,CAACmB,cAAc,CAACD,WAAW,CAAC;IACtClB,UAAU,CACPoB,KAAK,EAAE,CACPC,IAAI,CAAEC,GAAG,IAAK;MACbL,OAAO,CAACK,GAAG,CAACC,IAAI,CAACC,EAAE,CAAC;MACpB,OAAOF,GAAG,CAACC,IAAI,CAACC,EAAE;IACpB,CAAC,CAAC,CACDH,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMG,IAAI,GAAGzB,UAAU,CAAC0B,gBAAgB,CAACJ,GAAG,CAAC;MAC7C,OAAO;QAAEK,EAAE,EAAEF,IAAI;QAAED,EAAE,EAAEF;MAAI,CAAC;IAC9B,CAAC,CAAC,CACDD,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIM,GAAW,GAAG,CAAC;MACnB,MAAMC,gBAAgB,GAAG,CAACP,GAAG,CAACK,EAAE,CAAC;MACjC,OAAOL,GAAG,CAACK,EAAE,CAACJ,IAAI,CAACO,KAAK,GAAG,CAAC,IAAIF,GAAG,GAAG,EAAE,EAAE;QACxC,MAAMG,OAAO,GAAG/B,UAAU,CAAC0B,gBAAgB,CAACV,IAAI,EAAE;UAChDgB,KAAK,EAAE,EAAE;UACTC,MAAM,EAAEL;QACV,CAAC,CAAC;QACFC,gBAAgB,CAACK,IAAI,CAACH,OAAO,CAAC;QAC9BH,GAAG,IAAI,CAAC;MACV;MACA,OAAOO,OAAO,CAACC,GAAG,CAACP,gBAAgB,CAAC,CAACR,IAAI,CAAEgB,OAAO,IAAK;QACrD,MAAMC,SAAgD,GAAG,EAAE;QAC3DD,OAAO,CAACE,OAAO,CAAEC,MAAM,IAAK;UAC1BA,MAAM,CAACjB,IAAI,CAACkB,KAAK,CAACF,OAAO,CAAEG,IAAI,IAAK;YAClCJ,SAAS,CAACJ,IAAI,CAACQ,IAAI,CAAC;UACtB,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,OAAOJ,SAAS;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDjB,IAAI,CAAEiB,SAAS,IAAK;MACnBzB,gBAAgB,CAACyB,SAAS,CAAC;IAC7B,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,CAAC1B,WAAW,CAAC,CAAC;;EAEjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA3B,SAAS,CAAC,MAAM;IACd,IAAIe,iBAAiB,IAAI,IAAI,EAAE;MAC7BN,UAAU,CAAC+C,WAAW,CAACzC,iBAAiB,CAAC,CAACe,IAAI,CAAEC,GAAG,IAAK;QACtDb,kBAAkB,CAACa,GAAG,CAACC,IAAI,CAAC;MAC9B,CAAC,CAAC;MACFvB,UAAU,CAACgD,iBAAiB,CAAC1C,iBAAiB,CAAC,CAACe,IAAI,CAAEC,GAAG,IAAK;QAC5DP,wBAAwB,CAACO,GAAG,CAACC,IAAI,CAACkB,KAAK,CAAC;MAC1C,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACnC,iBAAiB,CAAC,CAAC;EAEvB,oBACEP,OAAA,CAACP,SAAS;IAACyD,KAAK;IAACC,SAAS,EAAC,gDAAgD;IAAAC,QAAA,gBACzEpD,OAAA,CAACN,GAAG;MAACyD,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BpD,OAAA;QAAImD,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE,eACNxD,OAAA,CAACN,GAAG;MAACwD,KAAK;MAACC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBAC7CpD,OAAA,CAACL,GAAG;QAACwD,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBpD,OAAA,CAACJ,WAAW;UACVW,iBAAiB,EAAEA,iBAAkB;UACrCkD,oBAAoB,EAAEjD,oBAAqB;UAC3CG,gBAAgB,EAAEA,gBAAiB;UACnCC,mBAAmB,EAAEA,mBAAoB;UACzCC,aAAa,EAAEA;QAAc;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC7B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNxD,OAAA,CAACL,GAAG;QAACwD,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnB3C,eAAe,IAAI,IAAI,iBACtBT,OAAA,CAACF,QAAQ;UACP4D,QAAQ,EAAEjD,eAAgB;UAC1BkD,MAAM,EAAE5C;QAAsB;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEjC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG,eACNxD,OAAA,CAACL,GAAG;QAACwD,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBpD,OAAA;UAAAoD,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAEhB,CAAC;AAACnD,EAAA,CA5GIF,SAAoB;EAAA,QAeWN,OAAO;AAAA;AAAA+D,EAAA,GAftCzD,SAAoB;AA8G1B,eAAeA,SAAS;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}