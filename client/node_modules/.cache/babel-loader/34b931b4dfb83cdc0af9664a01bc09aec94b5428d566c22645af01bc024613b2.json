{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\TrackCard.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./TrackCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst convertMsToMinSec = dur => {\n  if (dur === undefined) {\n    return \"0:00\";\n  }\n  let toret = \"\";\n  toret += Math.floor(dur / 60000);\n  toret += \":\";\n  const sec = Math.floor(dur % 60000 / 1000);\n  if (sec < 10) {\n    toret += \"0\";\n  }\n  toret += sec;\n  return toret;\n};\nconst TrackCard = _ref => {\n  _s();\n  var _track$track, _track$track2, _track$track3, _track$track4, _track$track5;\n  let {\n    track\n  } = _ref;\n  const [isActive, setIsActive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `text-left flex-row align-items-center playlist-card ${isActive ? \"active\" : \"non-active\"}`,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          className: \"track-card-img\",\n          variant: \"left\",\n          src: (_track$track = track.track) === null || _track$track === void 0 ? void 0 : _track$track.album.images[0].url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column ml-3\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: (_track$track2 = track.track) === null || _track$track2 === void 0 ? void 0 : _track$track2.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: (_track$track3 = track.track) === null || _track$track3 === void 0 ? void 0 : _track$track3.artists.map(artist => {\n            return artist.name;\n          }).join(\", \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"text-muted\",\n          children: (_track$track4 = track.track) === null || _track$track4 === void 0 ? void 0 : _track$track4.album.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"text-muted\",\n          children: convertMsToMinSec((_track$track5 = track.track) === null || _track$track5 === void 0 ? void 0 : _track$track5.duration_ms)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackCard, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n_c = TrackCard;\nexport default TrackCard;\nvar _c;\n$RefreshReg$(_c, \"TrackCard\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","convertMsToMinSec","dur","undefined","toret","Math","floor","sec","TrackCard","_ref","_s","_track$track","_track$track2","_track$track3","_track$track4","_track$track5","track","isActive","setIsActive","className","children","Row","Col","Img","variant","src","album","images","url","fileName","_jsxFileName","lineNumber","columnNumber","Title","name","Text","artists","map","artist","join","duration_ms","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/TrackCard.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./TrackCard.css\";\n\nconst convertMsToMinSec = (dur: number | undefined) => {\n  if (dur === undefined) {\n    return \"0:00\";\n  }\n  let toret = \"\";\n  toret += Math.floor(dur / 60000);\n  toret += \":\";\n  const sec = Math.floor((dur % 60000) / 1000);\n  if (sec < 10) {\n    toret += \"0\";\n  }\n  toret += sec;\n  return toret;\n};\n\ninterface Props {\n  track: SpotifyApi.PlaylistTrackObject;\n}\n\nconst TrackCard: FC<Props> = ({ track }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <Card\n      className={`text-left flex-row align-items-center playlist-card ${\n        isActive ? \"active\" : \"non-active\"\n      }`}\n    >\n      <Row>\n        <Col>\n          <Card.Img\n            className=\"track-card-img\"\n            variant=\"left\"\n            src={track.track?.album.images[0].url}\n          />\n        </Col>\n        <Col></Col>\n        <div className=\"d-flex flex-column ml-3\">\n          <Card.Title>{track.track?.name}</Card.Title>\n          <Card.Text>\n            {track.track?.artists\n              .map((artist) => {\n                return artist.name;\n              })\n              .join(\", \")}\n          </Card.Text>\n        </div>\n        <div>\n          <Card.Text className=\"text-muted\">\n            {track.track?.album.name}\n          </Card.Text>\n          <Card.Text className=\"text-muted\">\n            {convertMsToMinSec(track.track?.duration_ms)}\n          </Card.Text>\n        </div>\n      </Row>\n    </Card>\n  );\n};\n\nexport default TrackCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}