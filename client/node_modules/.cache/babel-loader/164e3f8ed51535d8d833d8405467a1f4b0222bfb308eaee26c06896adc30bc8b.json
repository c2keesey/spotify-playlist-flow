{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Playlist.tsx\";\nimport { ListGroup, Container, Row, Col, Image } from \"react-bootstrap\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_IMG = \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\nconst Playlist = _ref => {\n  let {\n    playlist\n  } = _ref;\n  const [currentPlaylist, setCurrentPlaylist] = useState;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: playlist.images.length === 0 ? DEFAULT_IMG : playlist.images[0].url,\n          roundedCircle: true,\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"playlist-tracks\",\n          style: {\n            maxHeight: \"300px\",\n            overflowY: \"scroll\"\n          },\n          children: playlist.tracks.map(track => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: track.artists.join(\", \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: track.album\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["ListGroup","Container","Row","Col","Image","useState","jsxDEV","_jsxDEV","DEFAULT_IMG","Playlist","_ref","playlist","currentPlaylist","setCurrentPlaylist","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","images","length","url","roundedCircle","width","height","className","style","maxHeight","overflowY","tracks","map","track","Item","artists","join","album","id","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Playlist.tsx"],"sourcesContent":["import { ListGroup, Container, Row, Col, Image } from \"react-bootstrap\";\nimport { useState } from 'react';\n\nconst DEFAULT_IMG: string =\n  \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\n\ninterface Props {\n  playlist: SpotifyApi.PlaylistObjectSimplified;\n}\n\nconst Playlist: React.FC<Props> = ({ playlist }) => {\n\n  const [currentPlaylist, setCurrentPlaylist] = useState<string | null>\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2>{playlist.name}</h2>\n        </Col>\n        <Col>\n          <Image\n            src={\n              playlist.images.length === 0\n                ? DEFAULT_IMG\n                : playlist.images[0].url\n            }\n            roundedCircle\n            width=\"100\"\n            height=\"100\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ListGroup\n            className=\"playlist-tracks\"\n            style={{ maxHeight: \"300px\", overflowY: \"scroll\" }}\n          >\n            {playlist.tracks.map((track) => (\n              <ListGroup.Item key={track.id}>\n                <div>\n                  <strong>{track.name}</strong>\n                  <p>{track.artists.join(\", \")}</p>\n                  <small>{track.album}</small>\n                </div>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Playlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}