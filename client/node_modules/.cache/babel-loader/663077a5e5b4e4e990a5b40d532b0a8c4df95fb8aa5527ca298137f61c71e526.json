{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Playlist.tsx\";\nimport { ListGroup, Container, Row, Col, Image } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_IMG = \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\nconst Playlist = _ref => {\n  let {\n    playlist\n  } = _ref;\n  if (curPlaylist == null) {\n    return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: curPlaylist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: curPlaylist.images.length === 0 ? DEFAULT_IMG : curPlaylist.images[0].url,\n          roundedCircle: true,\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"curPlaylist-tracks\",\n          style: {\n            maxHeight: \"300px\",\n            overflowY: \"scroll\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["ListGroup","Container","Row","Col","Image","jsxDEV","_jsxDEV","DEFAULT_IMG","Playlist","_ref","playlist","curPlaylist","fileName","_jsxFileName","lineNumber","columnNumber","children","name","src","images","length","url","roundedCircle","width","height","className","style","maxHeight","overflowY","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Playlist.tsx"],"sourcesContent":["import { ListGroup, Container, Row, Col, Image } from \"react-bootstrap\";\n\nconst DEFAULT_IMG: string =\n  \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\n\ninterface Props {\n  curPlaylist: SpotifyApi.SinglePlaylistResponse;\n}\n\nconst Playlist: React.FC<Props> = ({ playlist }) => {\n  if (curPlaylist == null) {\n    return <Container />;\n  }\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2>{curPlaylist.name}</h2>\n        </Col>\n        <Col>\n          <Image\n            src={\n              curPlaylist.images.length === 0\n                ? DEFAULT_IMG\n                : curPlaylist.images[0].url\n            }\n            roundedCircle\n            width=\"100\"\n            height=\"100\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ListGroup\n            className=\"curPlaylist-tracks\"\n            style={{ maxHeight: \"300px\", overflowY: \"scroll\" }}\n          >\n            {/* {curPlaylist.tracks.map((track) => (\n                <ListGroup.Item key={track.id}>\n                  <div>\n                    <strong>{track.name}</strong>\n                    <p>{track.artists.join(\", \")}</p>\n                    <small>{track.album}</small>\n                  </div>\n                </ListGroup.Item>\n              ))} */}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Playlist;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,WAAmB,GACvB,4DAA4D;AAM9D,MAAMC,QAAyB,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAC7C,IAAIE,WAAW,IAAI,IAAI,EAAE;IACvB,oBAAOL,OAAA,CAACL,SAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACtB;EACA,oBACET,OAAA,CAACL,SAAS;IAAAe,QAAA,gBACRV,OAAA,CAACJ,GAAG;MAAAc,QAAA,gBACFV,OAAA,CAACH,GAAG;QAAAa,QAAA,eACFV,OAAA;UAAAU,QAAA,EAAKL,WAAW,CAACM;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAM;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,eACNT,OAAA,CAACH,GAAG;QAAAa,QAAA,eACFV,OAAA,CAACF,KAAK;UACJc,GAAG,EACDP,WAAW,CAACQ,MAAM,CAACC,MAAM,KAAK,CAAC,GAC3Bb,WAAW,GACXI,WAAW,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACE,GAC3B;UACDC,aAAa;UACbC,KAAK,EAAC,KAAK;UACXC,MAAM,EAAC;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACZ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACNT,OAAA,CAACJ,GAAG;MAAAc,QAAA,eACFV,OAAA,CAACH,GAAG;QAAAa,QAAA,eACFV,OAAA,CAACN,SAAS;UACRyB,SAAS,EAAC,oBAAoB;UAC9BC,KAAK,EAAE;YAAEC,SAAS,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAS;QAAE;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAWzC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAEhB,CAAC;AAACc,EAAA,GA3CIrB,QAAyB;AA6C/B,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}