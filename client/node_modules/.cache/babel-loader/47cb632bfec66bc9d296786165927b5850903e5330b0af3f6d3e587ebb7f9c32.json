{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\SpotifyProvider.tsx\",\n  _s = $RefreshSig$();\n// SpotifyProvider.tsx\nimport React, { useState } from \"react\";\nimport SpotifyContext from \"./SpotifyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentPlaylistID, setCurrentPlaylistID] = useState(null);\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\n  const [searchedPlaylist, setSearchedPlaylist] = useState(\"\");\n  const [userPlaylists, setUserPlaylists] = useState([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState([]);\n  const value = {\n    currentPlaylistID,\n    setCurrentPlaylistID,\n    searchedPlaylist,\n    setSearchedPlaylist,\n    userPlaylists,\n    setUserPlaylists,\n    currentPlaylist,\n    setCurrentPlaylist,\n    currentPlaylistTracks,\n    setCurrentPlaylistTracks\n  };\n  return /*#__PURE__*/_jsxDEV(SpotifyContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyProvider, \"dPIjYvBK3BjiapzE9RmN7kHIofs=\");\n_c = SpotifyProvider;\nexport default SpotifyProvider;\nvar _c;\n$RefreshReg$(_c, \"SpotifyProvider\");","map":{"version":3,"names":["React","useState","SpotifyContext","jsxDEV","_jsxDEV","SpotifyProvider","_ref","_s","children","currentPlaylistID","setCurrentPlaylistID","currentPlaylist","setCurrentPlaylist","searchedPlaylist","setSearchedPlaylist","userPlaylists","setUserPlaylists","currentPlaylistTracks","setCurrentPlaylistTracks","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/SpotifyProvider.tsx"],"sourcesContent":["// SpotifyProvider.tsx\r\nimport React, { FC, useState } from \"react\";\r\nimport SpotifyContext from \"./SpotifyContext\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst SpotifyProvider: FC<Props> = ({ children }) => {\r\n  const [currentPlaylistID, setCurrentPlaylistID] = useState<string | null>(\r\n    null\r\n  );\r\n  const [currentPlaylist, setCurrentPlaylist] =\r\n    useState<SpotifyApi.SinglePlaylistResponse | null>(null);\r\n  const [searchedPlaylist, setSearchedPlaylist] = useState<string>(\"\");\r\n  const [userPlaylists, setUserPlaylists] = useState<\r\n    SpotifyApi.PlaylistObjectSimplified[]\r\n  >([]);\r\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState<\r\n    SpotifyApi.PlaylistTrackObject[]\r\n  >([]);\r\n\r\n  const value = {\r\n    currentPlaylistID,\r\n    setCurrentPlaylistID,\r\n    searchedPlaylist,\r\n    setSearchedPlaylist,\r\n    userPlaylists,\r\n    setUserPlaylists,\r\n    currentPlaylist,\r\n    setCurrentPlaylist,\r\n    currentPlaylistTracks,\r\n    setCurrentPlaylistTracks,\r\n  };\r\n\r\n  return (\r\n    <SpotifyContext.Provider value={value}>{children}</SpotifyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SpotifyProvider;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM9C,MAAMC,eAA0B,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CACxD,IAAI,CACL;EACD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GACzCX,QAAQ,CAA2C,IAAI,CAAC;EAC1D,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EACpE,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAEhD,EAAE,CAAC;EACL,MAAM,CAACgB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGjB,QAAQ,CAEhE,EAAE,CAAC;EAEL,MAAMkB,KAAK,GAAG;IACZV,iBAAiB;IACjBC,oBAAoB;IACpBG,gBAAgB;IAChBC,mBAAmB;IACnBC,aAAa;IACbC,gBAAgB;IAChBL,eAAe;IACfC,kBAAkB;IAClBK,qBAAqB;IACrBC;EACF,CAAC;EAED,oBACEd,OAAA,CAACF,cAAc,CAACkB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAX,QAAA,EAAEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAA2B;AAE/E,CAAC;AAACjB,EAAA,CA9BIF,eAA0B;AAAAoB,EAAA,GAA1BpB,eAA0B;AAgChC,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}