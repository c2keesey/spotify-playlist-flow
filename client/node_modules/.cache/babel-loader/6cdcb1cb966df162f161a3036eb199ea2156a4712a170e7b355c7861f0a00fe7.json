{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Playlist.tsx\";\nimport { Container, Row, Col, Image, Form } from \"react-bootstrap\";\nimport \"./Playlist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_IMG = \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\nconst Playlist = _ref => {\n  let {\n    playlist,\n    tracks\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"pannel-height\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-start d-flex flex-nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          className: \"p-image\",\n          src: playlist.images.length === 0 ? DEFAULT_IMG : playlist.images[0].url,\n          width: \"110\",\n          height: \"110\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"d-flex flex-column py-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"search\",\n            placeholder: \"Search\"\n            // value={searchedPlaylist}\n            // onChange={(e) => setSearchedPlaylist(e.target.value)}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"h-100 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        className: \"g-1\",\n        children: tracks.length == 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"This playlist is empty :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : tracks.map((track, index) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"d-flex flex-column\",\n          children: /*#__PURE__*/_jsxDEV(TrackCard, {\n            track: playlist,\n            currentPlaylistID: currentPlaylistID,\n            setcurrentPlaylistID: setcurrentPlaylistID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["Container","Row","Col","Image","Form","jsxDEV","_jsxDEV","DEFAULT_IMG","Playlist","_ref","playlist","tracks","className","children","src","images","length","url","width","height","fileName","_jsxFileName","lineNumber","columnNumber","name","Control","type","placeholder","xs","md","map","track","index","TrackCard","currentPlaylistID","setcurrentPlaylistID","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Playlist.tsx"],"sourcesContent":["import { ListGroup, Container, Row, Col, Image, Form } from \"react-bootstrap\";\nimport \"./Playlist.css\";\n\nconst DEFAULT_IMG: string =\n  \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\n\ninterface Props {\n  playlist: SpotifyApi.SinglePlaylistResponse;\n  tracks: SpotifyApi.PlaylistTrackObject[];\n}\n\nconst Playlist: React.FC<Props> = ({ playlist, tracks }) => {\n  return (\n    <Container className=\"pannel-height\">\n      <Row className=\"justify-content-start d-flex flex-nowrap\">\n        <Col className=\"col-4\">\n          <Image\n            className=\"p-image\"\n            src={\n              playlist.images.length === 0\n                ? DEFAULT_IMG\n                : playlist.images[0].url\n            }\n            width=\"110\"\n            height=\"110\"\n          />\n        </Col>\n        <Col className=\"col-8\">\n          <h2>{playlist.name}</h2>\n          <Container className=\"d-flex flex-column py-3\">\n            <Form.Control\n              type=\"search\"\n              placeholder=\"Search\"\n              // value={searchedPlaylist}\n              // onChange={(e) => setSearchedPlaylist(e.target.value)}\n            />\n          </Container>\n        </Col>\n      </Row>\n      <Container className=\"h-100 overflow-auto\">\n        <Row xs={1} md={1} className=\"g-1\">\n          {tracks.length == 0 ? (\n            <h3>This playlist is empty :&#40;</h3>\n          ) : (\n            tracks.map((track, index) => (\n              <Col key={index} className=\"d-flex flex-column\">\n                <TrackCard\n                  track={playlist}\n                  currentPlaylistID={currentPlaylistID}\n                  setcurrentPlaylistID={setcurrentPlaylistID}\n                />\n              </Col>\n            ))\n          )}\n        </Row>\n        {/* <ListGroup>\n            {tracks.map((item) => (\n              <ListGroup.Item key={item.track?.name}>\n                <div>\n                  <strong>{item.track?.name}</strong>\n                  <p>\n                    {item.track?.artists\n                      .map((artist) => {\n                        return artist.name;\n                      })\n                      .join(\", \")}\n                  </p>\n                  <small>{item.track?.album.name}</small>\n                </div>\n              </ListGroup.Item>\n            ))}\n          </ListGroup> */}\n      </Container>\n    </Container>\n  );\n};\n\nexport default Playlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}