{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\PlaylistCard.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistCard = _ref => {\n  _s();\n  let {\n    playlist,\n    currentPlaylist,\n    setCurrentPlaylist\n  } = _ref;\n  const [isActive, setIsActive] = useState(false);\n  useEffect(() => {\n    if (currentPlaylist === playlist.name) {\n      setIsActive(true);\n    } else {\n      setIsActive(false);\n    }\n  }, [currentPlaylist, playlist.name]);\n  const handleClick = () => {\n    setCurrentPlaylist(playlist.name);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `text-dark text-left ${isActive ? \"active\" : \"\"}`,\n    onClick: handleClick,\n    style: {\n      textAlign: \"left\",\n      backgroundColor: isActive ? \"grey\" : \"white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [playlist.songs, \" Songs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistCard, \"Got/rvXObncgVYAtKDAIOlzhTAc=\");\n_c = PlaylistCard;\nexport default PlaylistCard;\nvar _c;\n$RefreshReg$(_c, \"PlaylistCard\");","map":{"version":3,"names":["useState","useEffect","Card","jsxDEV","_jsxDEV","PlaylistCard","_ref","_s","playlist","currentPlaylist","setCurrentPlaylist","isActive","setIsActive","name","handleClick","className","onClick","style","textAlign","backgroundColor","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","songs","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/PlaylistCard.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\ninterface Props {\r\n  playlist: {\r\n    name: string;\r\n    songs: number;\r\n  };\r\n  currentPlaylist: string | null;\r\n  setCurrentPlaylist: (playlist: string) => void;\r\n}\r\n\r\nconst PlaylistCard: FC<Props> = ({\r\n  playlist,\r\n  currentPlaylist,\r\n  setCurrentPlaylist,\r\n}) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentPlaylist === playlist.name) {\r\n      setIsActive(true);\r\n    } else {\r\n      setIsActive(false);\r\n    }\r\n  }, [currentPlaylist, playlist.name]);\r\n\r\n  const handleClick: () => void = () => {\r\n    setCurrentPlaylist(playlist.name);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={`text-dark text-left ${isActive ? \"active\" : \"\"}`}\r\n      onClick={handleClick}\r\n      style={{\r\n        textAlign: \"left\",\r\n        backgroundColor: isActive ? \"grey\" : \"white\",\r\n      }}\r\n    >\r\n      <Card.Body className=\"d-flex justify-content-between\">\r\n        <Card.Title>{playlist.name}</Card.Title>\r\n        <Card.Text>{playlist.songs} Songs</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlaylistCard;\r\n"],"mappings":";;AAAA,SAAaA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/C,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWvC,MAAMC,YAAuB,GAAGC,IAAA,IAI1B;EAAAC,EAAA;EAAA,IAJ2B;IAC/BC,QAAQ;IACRC,eAAe;IACfC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,IAAIQ,eAAe,KAAKD,QAAQ,CAACK,IAAI,EAAE;MACrCD,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLA,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,eAAe,EAAED,QAAQ,CAACK,IAAI,CAAC,CAAC;EAEpC,MAAMC,WAAuB,GAAGA,CAAA,KAAM;IACpCJ,kBAAkB,CAACF,QAAQ,CAACK,IAAI,CAAC;EACnC,CAAC;EAED,oBACET,OAAA,CAACF,IAAI;IACHa,SAAS,EAAG,uBAAsBJ,QAAQ,GAAG,QAAQ,GAAG,EAAG,EAAE;IAC7DK,OAAO,EAAEF,WAAY;IACrBG,KAAK,EAAE;MACLC,SAAS,EAAE,MAAM;MACjBC,eAAe,EAAER,QAAQ,GAAG,MAAM,GAAG;IACvC,CAAE;IAAAS,QAAA,eAEFhB,OAAA,CAACF,IAAI,CAACmB,IAAI;MAACN,SAAS,EAAC,gCAAgC;MAAAK,QAAA,gBACnDhB,OAAA,CAACF,IAAI,CAACoB,KAAK;QAAAF,QAAA,EAAEZ,QAAQ,CAACK;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eACxCtB,OAAA,CAACF,IAAI,CAACyB,IAAI;QAAAP,QAAA,GAAEZ,QAAQ,CAACoB,KAAK,EAAC,QAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEX,CAAC;AAACnB,EAAA,CAlCIF,YAAuB;AAAAwB,EAAA,GAAvBxB,YAAuB;AAoC7B,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}