{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport YourLibrary from \"./YourLibrary\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst swa = new SpotifyWebApi({\n  clientId: \"5e3726a0ec3f4360bf3d47eb34207aa8\"\n});\nconst Dashboard = _ref => {\n  _s();\n  let {\n    authCode\n  } = _ref;\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\n  const accessToken = useAuth({\n    authCode\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        type: \"text/css\",\n        href: \"/App.scss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 mb-2 bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"p-3 mb-2 bg-dark-subtle text-center\",\n            children: \"Playlist Flow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(YourLibrary, {\n                currentPlaylist: currentPlaylist,\n                setCurrentPlaylist: setCurrentPlaylist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: currentPlaylist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Flow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"9ILyzmNE+WwEopdAU148h4dvqvM=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","Container","Row","Col","YourLibrary","useAuth","SpotifyWebApi","jsxDEV","_jsxDEV","Fragment","_Fragment","swa","clientId","Dashboard","_ref","_s","authCode","currentPlaylist","setCurrentPlaylist","accessToken","children","rel","type","href","fileName","_jsxFileName","lineNumber","columnNumber","className","fluid","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Dashboard.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport YourLibrary from \"./YourLibrary\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nconst swa = new SpotifyWebApi({\n  clientId: \"5e3726a0ec3f4360bf3d47eb34207aa8\",\n});\n\ninterface Props {\n  authCode: string;\n}\n\nconst Dashboard: FC<Props> = ({ authCode }) => {\n  const [currentPlaylist, setCurrentPlaylist] = useState<string | null>(null);\n\n  const accessToken: string | null = useAuth({ authCode });\n\n  return (\n    <>\n      <head>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"/App.scss\" />\n      </head>\n      <body>\n        <div className=\"p-3 mb-2 bg-dark text-white\">\n          <Container>\n            <h1 className=\"p-3 mb-2 bg-dark-subtle text-center\">\n              Playlist Flow\n            </h1>\n          </Container>\n          <Container fluid className=\"text-center\">\n            <Row>\n              <Col>\n                <YourLibrary\n                  currentPlaylist={currentPlaylist}\n                  setCurrentPlaylist={setCurrentPlaylist}\n                />\n              </Col>\n              <Col>\n                <h2>{currentPlaylist}</h2>\n              </Col>\n              <Col>\n                <h2>Flow</h2>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </body>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}