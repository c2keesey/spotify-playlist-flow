{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable-next-line */\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport YourLibrary from \"./YourLibrary\";\nimport useAuth from \"./useAuth\";\nimport Playlist from \"./Playlist\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"5e3726a0ec3f4360bf3d47eb34207aa8\"\n});\nconst Dashboard = _ref => {\n  _s();\n  let {\n    authCode\n  } = _ref;\n  const [currentPlaylistID, setCurrentPlaylistID] = useState(null);\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\n  const [searchedPlaylist, setSearchedPlaylist] = useState(\"\");\n  const [userPlaylists, setUserPlaylists] = useState([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState([]);\n  const accessToken = useAuth({\n    authCode\n  });\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.getMe().then(res => {\n      return res.body.id;\n    }).then(res => {\n      return spotifyApi.getUserPlaylists(res);\n    }).then(res => {\n      setUserPlaylists(res.body.items);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    // if (!accessToken) return;\n    // if (searchedPlaylist === \"\") {\n    // }\n    spotifyApi.searchTracks(searchedPlaylist).then(res => {\n      console.log(res.body);\n    });\n  }, [searchedPlaylist, accessToken]);\n  useEffect(() => {\n    if (currentPlaylistID != null) {\n      spotifyApi.getPlaylist(currentPlaylistID).then(res => {\n        setCurrentPlaylist(res.body);\n      });\n      spotifyApi.getPlaylistTracks(currentPlaylistID).then(res => {\n        setCurrentPlaylistTracks(res.body.items);\n      });\n    }\n  }, [currentPlaylistID]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \" text-white d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex-grow-1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"p-3 mb-2 bg-dark-subtle text-center\",\n        children: \"Playlist Flow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      fluid: true,\n      className: \"text-center flex-grow-1 \",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(YourLibrary, {\n          currentPlaylistID: currentPlaylistID,\n          setcurrentPlaylistID: setCurrentPlaylistID,\n          searchedPlaylist: searchedPlaylist,\n          setSearchedPlaylist: setSearchedPlaylist,\n          userPlaylists: userPlaylists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: currentPlaylist != null && /*#__PURE__*/_jsxDEV(Playlist, {\n          playlist: currentPlaylist,\n          tracks: currentPlaylistTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qghRgiHQmX9KcN6MUJuNpGms7U0=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["SpotifyWebApi","useState","useEffect","Container","Row","Col","YourLibrary","useAuth","Playlist","jsxDEV","_jsxDEV","spotifyApi","clientId","Dashboard","_ref","_s","authCode","currentPlaylistID","setCurrentPlaylistID","currentPlaylist","setCurrentPlaylist","searchedPlaylist","setSearchedPlaylist","userPlaylists","setUserPlaylists","currentPlaylistTracks","setCurrentPlaylistTracks","accessToken","setAccessToken","getMe","then","res","body","id","getUserPlaylists","items","catch","err","console","log","searchTracks","getPlaylist","getPlaylistTracks","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setcurrentPlaylistID","playlist","tracks","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Dashboard.tsx"],"sourcesContent":["/* eslint-disable-next-line */\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { FC, useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport YourLibrary from \"./YourLibrary\";\nimport useAuth from \"./useAuth\";\nimport Playlist from \"./Playlist\";\nimport \"./App.css\";\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"5e3726a0ec3f4360bf3d47eb34207aa8\",\n});\n\ninterface Props {\n  authCode: string;\n}\n\nconst Dashboard: FC<Props> = ({ authCode }) => {\n  const [currentPlaylistID, setCurrentPlaylistID] = useState<string | null>(\n    null\n  );\n  const [currentPlaylist, setCurrentPlaylist] =\n    useState<SpotifyApi.SinglePlaylistResponse | null>(null);\n  const [searchedPlaylist, setSearchedPlaylist] = useState<string>(\"\");\n  const [userPlaylists, setUserPlaylists] = useState<\n    SpotifyApi.PlaylistObjectSimplified[]\n  >([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState<\n    SpotifyApi.PlaylistTrackObject[]\n  >([]);\n\n  const accessToken: string | null = useAuth({ authCode });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi\n      .getMe()\n      .then((res) => {\n        return res.body.id;\n      })\n      .then((res) => {\n        return spotifyApi.getUserPlaylists(res);\n      })\n      .then((res) => {\n        setUserPlaylists(res.body.items);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [accessToken]);\n\n  useEffect(() => {\n    // if (!accessToken) return;\n    // if (searchedPlaylist === \"\") {\n    // }\n    spotifyApi.searchTracks(searchedPlaylist).then((res) => {\n      console.log(res.body);\n    });\n  }, [searchedPlaylist, accessToken]);\n\n  useEffect(() => {\n    if (currentPlaylistID != null) {\n      spotifyApi.getPlaylist(currentPlaylistID).then((res) => {\n        setCurrentPlaylist(res.body);\n      });\n      spotifyApi.getPlaylistTracks(currentPlaylistID).then((res) => {\n        setCurrentPlaylistTracks(res.body.items);\n      });\n    }\n  }, [currentPlaylistID]);\n\n  return (\n    <Container fluid className=\" text-white d-flex flex-column\">\n      <Row className=\"flex-grow-1\">\n        <h1 className=\"p-3 mb-2 bg-dark-subtle text-center\">Playlist Flow</h1>\n      </Row>\n      <Row fluid className=\"text-center flex-grow-1 \">\n        <Col>\n          <YourLibrary\n            currentPlaylistID={currentPlaylistID}\n            setcurrentPlaylistID={setCurrentPlaylistID}\n            searchedPlaylist={searchedPlaylist}\n            setSearchedPlaylist={setSearchedPlaylist}\n            userPlaylists={userPlaylists}\n          />\n        </Col>\n        <Col>\n          {currentPlaylist != null && (\n            <Playlist\n              playlist={currentPlaylist}\n              tracks={currentPlaylistTracks}\n            />\n          )}\n        </Col>\n        <Col>\n          <h2>Flow</h2>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}