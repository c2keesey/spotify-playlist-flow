{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\YourLibrary.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { userdata } from \"./testdata\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport PlaylistCard from \"./PlaylistCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourLibrary = _ref => {\n  _s();\n  let {\n    currentPlaylist,\n    setCurrentPlaylist\n  } = _ref;\n  // Use state hooks here\n  const [playlistData] = useState(userdata.playlists);\n\n  // Use effect hooks here\n  useEffect(() => {\n    // componentDidMount/componentDidUpdate logic\n    return () => {\n      // componentWillUnmount logic\n    };\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Render component JSX here\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 1,\n          className: \"g-1\",\n          children: playlistData.map((playlist, index) => /*#__PURE__*/_jsxDEV(Col, {\n            className: \"d-flex flex-column\",\n            children: /*#__PURE__*/_jsxDEV(PlaylistCard, {\n              playlist: playlist,\n              currentPlaylist: currentPlaylist,\n              setCurrentPlaylist: setCurrentPlaylist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(YourLibrary, \"h5TXL1AJ0affMivV7TLqI4rGLUA=\");\n_c = YourLibrary;\nexport default YourLibrary;\nvar _c;\n$RefreshReg$(_c, \"YourLibrary\");","map":{"version":3,"names":["React","useState","useEffect","userdata","Container","Row","Col","PlaylistCard","jsxDEV","_jsxDEV","YourLibrary","_ref","_s","currentPlaylist","setCurrentPlaylist","playlistData","playlists","children","fileName","_jsxFileName","lineNumber","columnNumber","className","xs","md","map","playlist","index","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/YourLibrary.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { userdata } from \"./testdata\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport PlaylistCard from \"./PlaylistCard\";\r\n\r\ninterface Props {\r\n  currentPlaylist: string | null;\r\n  setCurrentPlaylist: (playlist: string) => void;\r\n}\r\n\r\nconst YourLibrary: React.FC<Props> = ({\r\n  currentPlaylist,\r\n  setCurrentPlaylist,\r\n}) => {\r\n  // Use state hooks here\r\n  const [playlistData] = useState(userdata.playlists);\r\n\r\n  // Use effect hooks here\r\n  useEffect(() => {\r\n    // componentDidMount/componentDidUpdate logic\r\n    return () => {\r\n      // componentWillUnmount logic\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    // Render component JSX here\r\n    <div>\r\n      <h2>Your Library</h2>\r\n      <Container className=\"overflow-auto\">\r\n        <Row xs={1} md={1} className=\"g-1\">\r\n          {playlistData.map((playlist, index) => (\r\n            <Col key={index} className=\"d-flex flex-column\">\r\n              <PlaylistCard\r\n                playlist={playlist}\r\n                currentPlaylist={currentPlaylist}\r\n                setCurrentPlaylist={setCurrentPlaylist}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourLibrary;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1C,MAAMC,WAA4B,GAAGC,IAAA,IAG/B;EAAAC,EAAA;EAAA,IAHgC;IACpCC,eAAe;IACfC;EACF,CAAC,GAAAH,IAAA;EACC;EACA,MAAM,CAACI,YAAY,CAAC,GAAGd,QAAQ,CAACE,QAAQ,CAACa,SAAS,CAAC;;EAEnD;EACAd,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACAO,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACrBZ,OAAA,CAACL,SAAS;QAACkB,SAAS,EAAC,eAAe;QAAAL,QAAA,eAClCR,OAAA,CAACJ,GAAG;UAACkB,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACF,SAAS,EAAC,KAAK;UAAAL,QAAA,EAC/BF,YAAY,CAACU,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChClB,OAAA,CAACH,GAAG;YAAagB,SAAS,EAAC,oBAAoB;YAAAL,QAAA,eAC7CR,OAAA,CAACF,YAAY;cACXmB,QAAQ,EAAEA,QAAS;cACnBb,eAAe,EAAEA,eAAgB;cACjCC,kBAAkB,EAAEA;YAAmB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACvC,GALMM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAOhB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACR;AAEV,CAAC;AAACT,EAAA,CAlCIF,WAA4B;AAAAkB,EAAA,GAA5BlB,WAA4B;AAoClC,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}