{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\Playlist.tsx\";\nimport { ListGroup, Container, Row, Col, Image } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_IMG = \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\nconst Playlist = _ref => {\n  let {\n    playlist,\n    tracks\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: playlist.images.length === 0 ? DEFAULT_IMG : playlist.images[0].url,\n          roundedCircle: true,\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"playlist-tracks\",\n          style: {\n            maxHeight: \"300px\",\n            overflowY: \"scroll\"\n          },\n          children: tracks.map(item => {\n            var _item$track, _item$track2, _item$track3;\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: (_item$track2 = item.track) === null || _item$track2 === void 0 ? void 0 : _item$track2.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: (_item$track3 = item.track) === null || _item$track3 === void 0 ? void 0 : _item$track3.artists.map(\", \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: track.album\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)\n            }, (_item$track = item.track) === null || _item$track === void 0 ? void 0 : _item$track.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["ListGroup","Container","Row","Col","Image","jsxDEV","_jsxDEV","DEFAULT_IMG","Playlist","_ref","playlist","tracks","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","images","length","url","roundedCircle","width","height","className","style","maxHeight","overflowY","map","item","_item$track","_item$track2","_item$track3","Item","track","artists","album","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/Playlist.tsx"],"sourcesContent":["import { ListGroup, Container, Row, Col, Image } from \"react-bootstrap\";\n\nconst DEFAULT_IMG: string =\n  \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\n\ninterface Props {\n  playlist: SpotifyApi.SinglePlaylistResponse;\n  tracks: SpotifyApi.PlaylistTrackObject[];\n}\n\nconst Playlist: React.FC<Props> = ({ playlist, tracks }) => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2>{playlist.name}</h2>\n        </Col>\n        <Col>\n          <Image\n            src={\n              playlist.images.length === 0\n                ? DEFAULT_IMG\n                : playlist.images[0].url\n            }\n            roundedCircle\n            width=\"100\"\n            height=\"100\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ListGroup\n            className=\"playlist-tracks\"\n            style={{ maxHeight: \"300px\", overflowY: \"scroll\" }}\n          >\n            {tracks.map((item) => (\n              <ListGroup.Item key={item.track?.name}>\n                <div>\n                  <strong>{item.track?.name}</strong>\n                  <p>{item.track?.artists.map(\", \")}</p>\n                  <small>{track.album}</small>\n                </div>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Playlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}