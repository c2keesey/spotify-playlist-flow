{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spotify Playlist App\\\\playlist-flow\\\\client\\\\src\\\\SpotifyProvider.tsx\",\n  _s = $RefreshSig$();\n// SpotifyProvider.tsx\nimport React, { useState, useMemo } from \"react\";\nimport SpotifyContext from \"./SpotifyContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentPlaylistID, setCurrentPlaylistID] = useState(null);\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\n  const [searchedPlaylist, setSearchedPlaylist] = useState(\"\");\n  const [userPlaylists, setUserPlaylists] = useState([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState([]);\n  const DEFAULT_IMG = \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\n  const value = useMemo(() => ({\n    currentPlaylistID,\n    setCurrentPlaylistID,\n    searchedPlaylist,\n    setSearchedPlaylist,\n    userPlaylists,\n    setUserPlaylists,\n    currentPlaylist,\n    setCurrentPlaylist,\n    currentPlaylistTracks,\n    setCurrentPlaylistTracks,\n    DEFAULT_IMG\n  }), [currentPlaylistID, searchedPlaylist, userPlaylists, currentPlaylist, currentPlaylistTracks]);\n  return /*#__PURE__*/_jsxDEV(SpotifyContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyProvider, \"+emMZQligifsXJ+9oe5eqNti92E=\");\n_c = SpotifyProvider;\nexport default SpotifyProvider;\nvar _c;\n$RefreshReg$(_c, \"SpotifyProvider\");","map":{"version":3,"names":["React","useState","useMemo","SpotifyContext","jsxDEV","_jsxDEV","SpotifyProvider","_ref","_s","children","currentPlaylistID","setCurrentPlaylistID","currentPlaylist","setCurrentPlaylist","searchedPlaylist","setSearchedPlaylist","userPlaylists","setUserPlaylists","currentPlaylistTracks","setCurrentPlaylistTracks","DEFAULT_IMG","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Spotify Playlist App/playlist-flow/client/src/SpotifyProvider.tsx"],"sourcesContent":["// SpotifyProvider.tsx\nimport React, { FC, useState, useMemo } from \"react\";\nimport SpotifyContext from \"./SpotifyContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst SpotifyProvider: FC<Props> = ({ children }) => {\n  const [currentPlaylistID, setCurrentPlaylistID] = useState<string | null>(\n    null\n  );\n  const [currentPlaylist, setCurrentPlaylist] =\n    useState<SpotifyApi.SinglePlaylistResponse | null>(null);\n  const [searchedPlaylist, setSearchedPlaylist] = useState<string>(\"\");\n  const [userPlaylists, setUserPlaylists] = useState<\n    SpotifyApi.PlaylistObjectSimplified[]\n  >([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState<\n    SpotifyApi.PlaylistTrackObject[]\n  >([]);\n\n  const DEFAULT_IMG: string =\n    \"https://via.placeholder.com/1200x1200/424242/FFFFFF/?text=\";\n\n  const value = useMemo(\n    () => ({\n      currentPlaylistID,\n      setCurrentPlaylistID,\n      searchedPlaylist,\n      setSearchedPlaylist,\n      userPlaylists,\n      setUserPlaylists,\n      currentPlaylist,\n      setCurrentPlaylist,\n      currentPlaylistTracks,\n      setCurrentPlaylistTracks,\n      DEFAULT_IMG\n    }),\n    [\n      currentPlaylistID,\n      searchedPlaylist,\n      userPlaylists,\n      currentPlaylist,\n      currentPlaylistTracks,\n    ]\n  );\n\n  return (\n    <SpotifyContext.Provider value={value}>{children}</SpotifyContext.Provider>\n  );\n};\n\nexport default SpotifyProvider;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAQC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACpD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM9C,MAAMC,eAA0B,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CACxD,IAAI,CACL;EACD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GACzCZ,QAAQ,CAA2C,IAAI,CAAC;EAC1D,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EACpE,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAEhD,EAAE,CAAC;EACL,MAAM,CAACiB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGlB,QAAQ,CAEhE,EAAE,CAAC;EAEL,MAAMmB,WAAmB,GACvB,4DAA4D;EAE9D,MAAMC,KAAK,GAAGnB,OAAO,CACnB,OAAO;IACLQ,iBAAiB;IACjBC,oBAAoB;IACpBG,gBAAgB;IAChBC,mBAAmB;IACnBC,aAAa;IACbC,gBAAgB;IAChBL,eAAe;IACfC,kBAAkB;IAClBK,qBAAqB;IACrBC,wBAAwB;IACxBC;EACF,CAAC,CAAC,EACF,CACEV,iBAAiB,EACjBI,gBAAgB,EAChBE,aAAa,EACbJ,eAAe,EACfM,qBAAqB,CACtB,CACF;EAED,oBACEb,OAAA,CAACF,cAAc,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EAAEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAA2B;AAE/E,CAAC;AAAClB,EAAA,CA3CIF,eAA0B;AAAAqB,EAAA,GAA1BrB,eAA0B;AA6ChC,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}